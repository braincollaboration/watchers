# This is a basic workflow to help you get started with Actions

name: builds

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Build artifacts
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      
      - name: Install dependencies
        run: dotnet restore $(pwd)/Watchers.All.sln
      - name: Build
        run: dotnet build --no-restore --configuration Release $(pwd)/Watchers.All.sln
      - name: Run tests
        run: dotnet test --no-restore --no-build --configuration Release $(pwd)/Watchers.All.sln
  sonar:
    name: Analyze in sonar
    runs-on: ubuntu-latest
    needs: [build]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install dotnet tools
        run: |
          dotnet tool install --global dotnet-coverage 
          dotnet tool install --global dotnet-sonarscanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"braincollaboration_watchers" /o:"braincollaboration" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental /p:TreatWarningsAsErrors="false" Watchers.All.sln
          dotnet-coverage collect 'dotnet test -c Release Watchers.All.sln' -f xml  -o 'coverage.xml'
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"